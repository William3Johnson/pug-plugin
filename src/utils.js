const path = require('path');
const plugin = 'pug-plugin';

const isFunction = (value) => typeof value === 'function';

const resource = {
  /**
   * @type {string} The context directory to require the file.
   */
  context: '',

  /**
   * @type {string} The the output public path is `webpack.options.output.publicPath`.
   */
  publicPath: '',

  /**
   * @type {{key: string}} The key is source file, the value is generated asset file.
   */
  files: {},

  /**
   * Require the resource file from source in pug template.
   *
   * @param {string} file The required file from source directory.
   * @returns {string} The output asset filename generated by filename template.
   */
  require: (file) => {
    const self = resource;
    const context = self.context || __dirname;
    const normalizedPath = path.join(file);
    const assetFile = self.files[normalizedPath];

    if (assetFile) {
      // resolve required asset filename
      return path.join(self.publicPath, assetFile);
    }

    const fullPath = path.isAbsolute(file) ? path.join(file) : path.join(context, file);

    return require(fullPath);
  },
};

/**
 * Simple equal of two objects.
 *
 * @param {{}} obj1
 * @param {{}} obj2
 * @return {boolean}
 */
const shallowEqual = function (obj1, obj2) {
  const keys1 = Object.keys(obj1);
  const keys2 = Object.keys(obj2);

  if (keys1.length !== keys2.length) return false;

  for (let key of keys1) {
    if (obj1[key] !== obj2[key]) return false;
  }

  return true;
};

module.exports = {
  plugin,
  resource,
  isFunction,
  shallowEqual,
};
